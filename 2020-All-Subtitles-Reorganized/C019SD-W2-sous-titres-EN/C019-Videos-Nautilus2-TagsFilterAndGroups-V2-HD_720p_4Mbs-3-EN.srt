1
00:00:01,370 --> 00:00:03,710
In this video I’d
like to show you 2 or 3 tips

2
00:00:03,710 --> 00:00:06,930
for Nautilus.
So let’s start by opening it.

3
00:00:09,090 --> 00:00:12,340
The first thing is that you see
packages

4
00:00:12,340 --> 00:00:15,950
with triangles and packages
without triangles.

5
00:00:16,910 --> 00:00:19,330
if I click on the triangle,
we see that

6
00:00:19,330 --> 00:00:21,560
inside there are names.
What does that mean?

7
00:00:22,050 --> 00:00:26,900
If I click on AST-Core,
I can see all the

8
00:00:26,900 --> 00:00:28,810
 classes containing this
package, as well as

9
00:00:28,810 --> 00:00:31,910
extensions, as I told you before
and

10
00:00:31,910 --> 00:00:34,370
then I see names.
In fact I have what we

11
00:00:34,370 --> 00:00:36,310
call tags, these are not packages,
these are not

12
00:00:36,310 --> 00:00:39,180
sub-packages, these are only
logical groups of classes.

13
00:00:39,210 --> 00:00:42,670
For a certain reason, the developer
has chosen that, to browse 

14
00:00:42,670 --> 00:00:45,000
his package, it would be easier 
to represent classes,

15
00:00:45,000 --> 00:00:48,450
first with all classes, 
and second

16
00:00:48,450 --> 00:00:52,560
with the organisation that 
suits him.

17
00:00:52,560 --> 00:00:54,650
For instance, here there is
Formatter, there are 2 code

18
00:00:55,100 --> 00:00:58,910
Formatter for Pharo. Here on Nodes
there are all the nodes

19
00:00:58,910 --> 00:01:02,560
of the abstract syntax tree.
Here there is the Parser, and there

20
00:01:02,560 --> 00:01:04,310
Tokens for example, and Visitors.

21
00:01:04,340 --> 00:01:06,800
You can see that very quickly,

22
00:01:06,800 --> 00:01:09,580
when you want to do something,
you can go directly on the right category.

23
00:01:14,590 --> 00:01:16,130
So here now,
I would like to show you

24
00:01:16,130 --> 00:01:18,890
how you can filter 
the information 

25
00:01:18,890 --> 00:01:21,240
Nautilus gives you and how 
you can create groups to

26
00:01:21,240 --> 00:01:22,560
manage your development.

27
00:01:23,040 --> 00:01:24,670
Let’s open Nautilus.

28
00:01:24,670 --> 00:01:29,240
If I type for instance Collections,

29
00:01:29,550 --> 00:01:31,820
I will get collections,
I will get all the packages

30
00:01:31,820 --> 00:01:36,680
which have the word Collections 
either in their name or in their tag.

31
00:01:36,680 --> 00:01:37,650
If we look here, there is this.

32
00:01:38,340 --> 00:01:39,450
So this is very helpful.

33
00:01:39,450 --> 00:01:43,800
You can also associate them,
there I can have all

34
00:01:43,800 --> 00:01:46,950
packages containing 
Morph and Collections.

35
00:01:50,850 --> 00:01:53,210
There is also another way to do
it, let’s imagine

36
00:01:53,210 --> 00:01:58,130
we work on Fuel. Fuel is Pharo’s
Serializer.

37
00:01:58,520 --> 00:02:03,250
I take all the Fuel packages and
I put them in another group.

38
00:02:04,750 --> 00:02:07,440
So here I put it in a Work
group, it means

39
00:02:07,440 --> 00:02:10,050
that next time I will open 
Nautilus, I will 

40
00:02:10,050 --> 00:02:11,430
have a group named Work.

41
00:02:12,000 --> 00:02:14,680
In this Work group I have
all my Fuel packages that will

42
00:02:14,680 --> 00:02:16,920
offer me exactly the same
functionalities than before.

43
00:02:16,920 --> 00:02:19,860
So it is quite practical,
I don’t have to write a 

44
00:02:19,860 --> 00:02:22,070
search each time, 
I know I have this. 

45
00:02:22,070 --> 00:02:24,290
In the same way, if you click 
on Work and 

46
00:02:24,290 --> 00:02:26,210
you create a new group,
you can call it

47
00:02:26,210 --> 00:02:31,110
MyNewGroup, and for instance
if you want to add

48
00:02:31,390 --> 00:02:35,610
Core inside, you do
"Add in group" “MyNewGroup” and

49
00:02:36,200 --> 00:02:37,840
you will have your package inside.
