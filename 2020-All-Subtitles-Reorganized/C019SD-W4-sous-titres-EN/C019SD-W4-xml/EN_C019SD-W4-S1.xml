<?xml version="1.0" encoding="UTF-8"?>
<tt xml:lang="en" xmlns="http://www.w3.org/ns/ttml" xmlns:ttm="http://www.w3.org/ns/ttml#metadata" xmlns:tts="http://www.w3.org/ns/ttml#styling" xmlns:ttp="http://www.w3.org/ns/ttml#parameter" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:smpte="http://www.smpte-ra.org/schemas/2052-1/2010/smpte-tt" ttp:timeBase="smpte" ttp:frameRate="25" ttp:dropMode="nonDrop" ttp:frameRateMultiplier="1 1">
    <head>
        <ttm:title>EN_C019SD-W4-S1</ttm:title>
        <ttm:desc>SMPTE Timed Text</ttm:desc>
        <ttm:copyright>Copyright (C) No Author</ttm:copyright>
        <styling>
            <style tts:fontStyle="normal" tts:fontWeight="normal" xml:id="normal" tts:color="black" tts:fontFamily="Verdana" tts:textAlign="center" tts:fontSize="80%"></style>
            <style tts:fontStyle="italic" tts:fontWeight="normal" xml:id="italic" tts:color="black" tts:fontFamily="Verdana" tts:textAlign="center" tts:fontSize="80%"></style>
        </styling>
        <layout>
            <region xml:id="top" tts:backgroundColor="transparent" tts:showBackground="whenActive" tts:displayAlign="before" tts:origin="10% 10%" tts:extent="80% 80%"></region>
            <region xml:id="bottom" tts:backgroundColor="transparent" tts:showBackground="whenActive" tts:displayAlign="after" tts:origin="10% 10%" tts:extent="80% 80%"></region>
            <region xml:id="center" tts:backgroundColor="transparent" tts:showBackground="whenActive" tts:displayAlign="center" tts:origin="10% 10%" tts:extent="80% 80%"></region>
        </layout>
    </head>
    <body>
        <div style="normal" xml:id="d1">
            <p xml:id="p1" begin="00:00:07:14" end="00:00:08:15" region="bottom">Hello, everyone.</p>
            <p xml:id="p2" begin="00:00:09:03" end="00:00:12:18" region="bottom">Welcome to Sequence 1 of Week 4.</p>
            <p xml:id="p3" begin="00:00:13:05" end="00:00:17:24" region="bottom">This week, we'll be covering<br/>Pharo inheritance basics,</p>
            <p xml:id="p4" begin="00:00:18:11" end="00:00:21:21" region="bottom">and look-up<br/>and web-development mechanisms.</p>
            <p xml:id="p5" begin="00:00:22:12" end="00:00:24:07" region="bottom">In the first sequence,</p>
            <p xml:id="p6" begin="00:00:24:21" end="00:00:29:03" region="bottom">we'll introduce inheritance basics.</p>
            <p xml:id="p7" begin="00:00:29:11" end="00:00:32:09" region="bottom">These concepts are quite similar</p>
            <p xml:id="p8" begin="00:00:32:13" end="00:00:35:09" region="bottom">to inheritance<br/>in other languages with classes,</p>
            <p xml:id="p9" begin="00:00:35:13" end="00:00:36:21" region="bottom">like Java.</p>
            <p xml:id="p10" begin="00:00:37:03" end="00:00:40:14" region="bottom">Even if you are familiar<br/>with these basics, please watch.</p>
            <p xml:id="p11" begin="00:00:40:18" end="00:00:42:21" region="bottom">We'll introduce some vocabulary,</p>
            <p xml:id="p12" begin="00:00:44:01" end="00:00:47:17" region="bottom">and a graphic representation<br/>you'll be seeing again</p>
            <p xml:id="p13" begin="00:00:48:03" end="00:00:50:18" region="bottom">throughout the rest of the course.</p>
            <p xml:id="p14" begin="00:00:51:05" end="00:00:54:07" region="bottom">This sequence will cover<br/>what inheritance is,</p>
            <p xml:id="p15" begin="00:00:54:12" end="00:00:55:20" region="bottom">and how to use it.</p>
            <p xml:id="p16" begin="00:00:56:03" end="00:00:59:01" region="bottom">Two classes are represented<br/>on the right:</p>
            <p xml:id="p17" begin="00:00:59:05" end="00:01:02:21" region="bottom">the Rectangle class,<br/>with its name, first of all,</p>
            <p xml:id="p18" begin="00:01:03:22" end="00:01:05:07" region="bottom">its instance variables,</p>
            <p xml:id="p19" begin="00:01:06:03" end="00:01:07:04" region="bottom">and its methods.</p>
            <p xml:id="p20" begin="00:01:07:14" end="00:01:11:20" region="bottom">Under it, you see the same thing.<br/>The class name, ColoredRectangle,</p>
            <p xml:id="p21" begin="00:01:12:12" end="00:01:15:09" region="bottom">its instance variables, and its methods.</p>
            <p xml:id="p22" begin="00:01:16:20" end="00:01:22:04" region="bottom">The vertical arrow here, with<br/>its point represented as a blank triangle,</p>
            <p xml:id="p23" begin="00:01:22:08" end="00:01:25:05" region="bottom">indicates an inheritance relationship.</p>
            <p xml:id="p24" begin="00:01:25:09" end="00:01:29:18" region="bottom">The ColoredRectangle subclass<br/>inherits from the Rectangle class.</p>
            <p xml:id="p25" begin="00:01:29:22" end="00:01:33:00" region="bottom">Generally, subclasses like<br/>ColoredRectangle</p>
            <p xml:id="p26" begin="00:01:33:04" end="00:01:37:08" region="bottom">refine the behavior and state<br/>of their superclass.</p>
            <p xml:id="p27" begin="00:01:37:24" end="00:01:42:10" region="bottom">A subclass like ColoredRectangle<br/>can add state and behavior</p>
            <p xml:id="p28" begin="00:01:42:19" end="00:01:43:24" region="bottom">to its superclass.</p>
            <p xml:id="p29" begin="00:01:45:03" end="00:01:49:02" region="bottom">Here, the ColoredRectangle class<br/>adds state</p>
            <p xml:id="p30" begin="00:01:49:08" end="00:01:53:21" region="bottom">in the form of two instance variables,<br/>color and border color.</p>
            <p xml:id="p31" begin="00:01:55:06" end="00:01:57:16" region="bottom">It also adds a method: color.</p>
            <p xml:id="p32" begin="00:01:58:03" end="00:02:01:04" region="bottom">At some point, we could say<br/>that every class</p>
            <p xml:id="p33" begin="00:02:01:13" end="00:02:04:07" region="bottom">inherits from the Object class.</p>
            <p xml:id="p34" begin="00:02:04:12" end="00:02:06:04" region="bottom">But that's not quite true.</p>
            <p xml:id="p35" begin="00:02:06:12" end="00:02:10:06" region="bottom">It is true that every class<br/>inherits from ProtoObject class.</p>
            <p xml:id="p36" begin="00:02:10:13" end="00:02:15:15" region="bottom">The ProtoObject superclass<br/>is used for very special cases.</p>
            <p xml:id="p37" begin="00:02:15:24" end="00:02:18:11" region="bottom">For the purposes of this course<br/>in Pharo,</p>
            <p xml:id="p38" begin="00:02:18:15" end="00:02:21:15" region="bottom">we'll say that all classes inherit<br/>from Object.</p>
            <p xml:id="p39" begin="00:02:21:19" end="00:02:23:22" region="bottom">That will suffice, for our needs.</p>
            <p xml:id="p40" begin="00:02:24:03" end="00:02:28:08" region="bottom">The ProtoObject class is reserved<br/>only for certain specific cases.</p>
            <p xml:id="p41" begin="00:02:28:20" end="00:02:33:11" region="bottom">You're not likely to need it<br/>to learn the basics of Pharo.</p>
            <p xml:id="p42" begin="00:02:34:09" end="00:02:37:09" region="bottom">Inheritance behaves<br/>in two different ways,</p>
            <p xml:id="p43" begin="00:02:37:13" end="00:02:41:08" region="bottom">depending on whether state<br/>or behavior is being inherited.</p>
            <p xml:id="p44" begin="00:02:41:21" end="00:02:43:21" region="bottom">Inheritance of state is static.</p>
            <p xml:id="p45" begin="00:02:44:01" end="00:02:47:10" region="bottom">That means that<br/>when you create the subclass,</p>
            <p xml:id="p46" begin="00:02:47:19" end="00:02:53:08" region="bottom">you know exactly what<br/>all the instance variables are.</p>
            <p xml:id="p47" begin="00:02:54:07" end="00:02:57:06" region="bottom">However, inheritance of behavior<br/>is dynamic.</p>
            <p xml:id="p48" begin="00:02:57:10" end="00:03:00:21" region="bottom">During the program's execution,<br/>you look at the methods</p>
            <p xml:id="p49" begin="00:03:01:00" end="00:03:02:23" region="bottom">defined in sub and superclasses.</p>
            <p xml:id="p50" begin="00:03:03:12" end="00:03:05:06" region="bottom">Concerning instance variables,</p>
            <p xml:id="p51" begin="00:03:05:14" end="00:03:08:21" region="bottom">inheritance happens<br/>during class definition.</p>
            <p xml:id="p52" begin="00:03:09:06" end="00:03:11:04" region="bottom">When you define the subclass,</p>
            <p xml:id="p53" begin="00:03:12:20" end="00:03:16:19" region="bottom">you take the instance variables<br/>defined in the subclass -</p>
            <p xml:id="p54" begin="00:03:16:23" end="00:03:21:02" region="bottom">here, they are color and border color,</p>
            <p xml:id="p55" begin="00:03:21:15" end="00:03:26:02" region="bottom">and you merge them<br/>with all the instance variables</p>
            <p xml:id="p56" begin="00:03:26:06" end="00:03:29:24" region="bottom">defined in the superclass<br/>and the line of the superclasses,</p>
            <p xml:id="p57" begin="00:03:30:03" end="00:03:31:24" region="bottom">all the way up to the Object.</p>
            <p xml:id="p58" begin="00:03:34:02" end="00:03:37:00" region="bottom">Here, the instance variables<br/>of ColoredRectangle</p>
            <p xml:id="p59" begin="00:03:37:04" end="00:03:40:05" region="bottom">will be with a color and border color.</p>
            <p xml:id="p60" begin="00:03:41:10" end="00:03:44:03" region="bottom">For behavior,<br/>inheritance mechanism changes.</p>
            <p xml:id="p61" begin="00:03:44:14" end="00:03:47:03" region="bottom">Watch the following sequences</p>
            <p xml:id="p62" begin="00:03:47:19" end="00:03:50:07" region="bottom">to see exactly how it occurs.</p>
            <p xml:id="p63" begin="00:03:50:14" end="00:03:51:17" region="bottom">So, on the whole,</p>
            <p xml:id="p64" begin="00:03:52:00" end="00:03:54:18" region="bottom">behavior inheritance happens at runtime.</p>
            <p xml:id="p65" begin="00:03:55:13" end="00:03:59:01" region="bottom">In other words, when you send<br/>a message to an object,</p>
            <p xml:id="p66" begin="00:04:00:01" end="00:04:03:12" region="bottom">a method match is searched for<br/>in the class hierarchy.</p>
            <p xml:id="p67" begin="00:04:04:12" end="00:04:07:11" region="bottom">Here, if I send a message<br/>to ColoredRectangle...</p>
            <p xml:id="p68" begin="00:04:08:05" end="00:04:11:07" region="bottom">The "area" message, for example...</p>
            <p xml:id="p69" begin="00:04:11:22" end="00:04:14:22" region="bottom">it will be searched in the class.</p>
            <p xml:id="p70" begin="00:04:15:01" end="00:04:18:23" region="bottom">The method will be searched<br/>in the ColoredRectangle class.</p>
            <p xml:id="p71" begin="00:04:19:09" end="00:04:22:02" region="bottom">The "area" method is missing.</p>
            <p xml:id="p72" begin="00:04:22:06" end="00:04:24:16" region="bottom">So we go up to the superclass.</p>
            <p xml:id="p73" begin="00:04:25:04" end="00:04:29:03" region="bottom">We find the "area" method.<br/>It is selected and executed.</p>
            <p xml:id="p74" begin="00:04:30:01" end="00:04:31:02" region="bottom">Now, I'll sum up:</p>
            <p xml:id="p75" begin="00:04:31:12" end="00:04:35:07" region="bottom">For inheritance, the concepts<br/>of subclass and superclass</p>
            <p xml:id="p76" begin="00:04:35:15" end="00:04:38:15" region="bottom">enables the subclass<br/>to refine the behavior</p>
            <p xml:id="p77" begin="00:04:38:19" end="00:04:41:07" region="bottom">of its superclass, and extend it.</p>
            <p xml:id="p78" begin="00:04:41:14" end="00:04:45:15" region="bottom">The subclass can also extend, or add,</p>
            <p xml:id="p79" begin="00:04:46:00" end="00:04:47:24" region="bottom">state to its superclass.</p>
            <p xml:id="p80" begin="00:04:48:10" end="00:04:52:16" region="bottom">Pharo's simple inheritance model<br/>stipulates one superclass per class.</p>
            <p xml:id="p81" begin="00:04:52:23" end="00:04:56:11" region="bottom">The concept of traits<br/>enables you multiply inheritance,</p>
            <p xml:id="p82" begin="00:04:56:15" end="00:04:58:07" region="bottom">but we will not cover that.</p>
            <p xml:id="p83" begin="00:04:58:23" end="00:05:01:03" region="bottom">Object is at the top of the hierarchy.</p>
            <p xml:id="p84" begin="00:05:01:08" end="00:05:05:08" region="bottom">So is ProtoObject,<br/>but we will not go into that detail.</p>
            <p xml:id="p85" begin="00:05:05:20" end="00:05:08:06" region="bottom">Inheritance of state is static.</p>
            <p xml:id="p86" begin="00:05:08:16" end="00:05:11:24" region="bottom">It happens when the subclass is defined.</p>
            <p xml:id="p87" begin="00:05:12:05" end="00:05:14:16" region="bottom">But inheritance of behavior is dynamic,</p>
            <p xml:id="p88" begin="00:05:14:23" end="00:05:16:07" region="bottom">happening at runtime,</p>
            <p xml:id="p89" begin="00:05:16:11" end="00:05:19:00" region="bottom">whenever you send a message<br/>to an object.</p>
        </div>
    </body>
</tt>