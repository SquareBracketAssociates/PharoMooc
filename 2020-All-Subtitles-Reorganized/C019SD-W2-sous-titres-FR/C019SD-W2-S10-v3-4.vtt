WEBVTT

00:00:00.640 --> 00:00:01.560 align:middle
Alors bonjour à tous.

00:00:02.060 --> 00:00:04.630 align:middle
Dans cette séquence nous
allons découvrir la méthode

00:00:04.830 --> 00:00:09.480 align:middle
Yourself, qui a priori ne
sert à rien et qui est pourtant

00:00:09.680 --> 00:00:10.440 align:middle
extrêmement utile.

00:00:11.000 --> 00:00:15.000 align:middle
On commence par un
exercice, cette expression "Set new

00:00:15.200 --> 00:00:19.930 align:middle
add: 2", pour laquelle on aimerait

00:00:20.660 --> 00:00:24.630 align:middle
récupérer un ensemble qui
contient la valeur 2, retourne

00:00:24.900 --> 00:00:27.120 align:middle
en fait d'un ensemble
uniquement la valeur 2.

00:00:27.820 --> 00:00:30.030 align:middle
Alors pourquoi est-ce qu'on
obtient la valeur 2 plutôt qu'un

00:00:30.230 --> 00:00:31.150 align:middle
ensemble qui contient 2 ?

00:00:31.730 --> 00:00:34.510 align:middle
Si on regarde la méthode
"Add" implémentée dans la classe

00:00:34.710 --> 00:00:37.750 align:middle
"Set", on voit que cette
méthode retourne son paramètre.

00:00:42.460 --> 00:00:47.000 align:middle
Dans l'expression "Set
new add 2", l'expression

00:00:47.200 --> 00:00:51.740 align:middle
"Set" retourne ma classe
"Set", quand on envoie "New" à

00:00:51.940 --> 00:00:54.410 align:middle
la classe "Set", ça
retourne un nouveau "Set" donc un

00:00:54.610 --> 00:00:58.770 align:middle
nouvel ensemble, et "Set
new add: 2" retourne la valeur

00:00:59.000 --> 00:01:00.110 align:middle
que retourne "Add 2", c'est-à-dire 2.

00:01:01.350 --> 00:01:02.480 align:middle
Donc on a perdu notre ensemble.

00:01:03.030 --> 00:01:06.880 align:middle
Une façon de corriger ce
problème-là est de découper ces

00:01:07.080 --> 00:01:07.840 align:middle
expressions étape par étape.

00:01:09.780 --> 00:01:12.720 align:middle
Donc on peut créer une
variable temporaire, donc là on

00:01:12.920 --> 00:01:17.730 align:middle
déclare la variable S.
On assigne dans S notre

00:01:18.050 --> 00:01:21.770 align:middle
nouvel ensemble, on ajoute 2 dans S.

00:01:23.030 --> 00:01:27.930 align:middle
Et S maintenant a comme
contenu un ensemble qui

00:01:28.130 --> 00:01:28.890 align:middle
contient la valeur 2.

00:01:29.090 --> 00:01:30.850 align:middle
Donc c'est bien ce
que l'on souhaitait.

00:01:31.630 --> 00:01:35.170 align:middle
Mais on peut simplifier
cette expression-là en utilisant

00:01:35.580 --> 00:01:37.460 align:middle
la méthode "Yourself".
Alors si on regarde la méthode

00:01:37.660 --> 00:01:41.440 align:middle
"Yourself", son contenu, la
seule chose qu'il y a à l'intérieur

00:01:41.640 --> 00:01:42.700 align:middle
de "Yourself" c'est "Returnself".

00:01:43.350 --> 00:01:45.710 align:middle
On a dit que "Returnself"
était optionnel donc a priori

00:01:45.910 --> 00:01:48.100 align:middle
cette méthode pourrait aussi
être vide, et ne faire rien

00:01:48.300 --> 00:01:49.790 align:middle
du tout que retourner son receveur.

00:01:51.300 --> 00:01:54.140 align:middle
Donc cette méthode, a
priori, elle ne fait rien d'autre

00:01:54.340 --> 00:01:56.820 align:middle
que retourner son
receveur et elle est quand même

00:01:57.020 --> 00:01:59.780 align:middle
parfaitement utile
dans ce genre de cas-là.

00:02:00.840 --> 00:02:05.280 align:middle
Grâce à l'opérateur
cascade, après avoir ajouté 2,

00:02:05.710 --> 00:02:09.230 align:middle
on va demander l'exécution
de la méthode "Yourself" qui

00:02:09.430 --> 00:02:12.470 align:middle
va nous retourner le receveur,
de façon à ce que l'expression

00:02:12.670 --> 00:02:16.840 align:middle
complète soit le receveur,
c'est-à-dire le nouveau "Set".

00:02:18.660 --> 00:02:23.390 align:middle
Donc si je prends "Set
new", c'est le nouveau

00:02:23.590 --> 00:02:28.050 align:middle
"Set", "Add 2"
appliqué à "Set new" ça

00:02:28.920 --> 00:02:33.180 align:middle
retourne 2, mais grâce à
l'opérateur cascade suivi de

00:02:33.460 --> 00:02:38.290 align:middle
"Yourself" l'ensemble de
l'expression va retourner

00:02:38.580 --> 00:02:42.400 align:middle
le nouveau "Set". Alors
pourquoi la cascade retourne

00:02:42.600 --> 00:02:45.700 align:middle
systématiquement la valeur
retournée par sa dernière expression?

00:02:46.790 --> 00:02:50.780 align:middle
Donc la cascade, dans ce
cas-là retourne la valeur

00:02:51.470 --> 00:02:52.400 align:middle
retournée par Yourself.

00:02:53.600 --> 00:02:56.860 align:middle
On se sert très fréquemment
de Yourself et de la cascade

00:02:57.450 --> 00:03:00.170 align:middle
dans les méthodes d'instanciation.

00:03:00.420 --> 00:03:03.570 align:middle
Donc ce sont des méthodes
qu'on va mettre côté classe, ce

00:03:03.770 --> 00:03:06.000 align:middle
sont des méthodes de
 classe, des messages qu'on va

00:03:06.200 --> 00:03:09.130 align:middle
envoyer à des classes qui
retournent de nouvelles instances.

00:03:10.150 --> 00:03:14.560 align:middle
Donc là, pour créer un
nouveau "Set" qui contient un

00:03:14.760 --> 00:03:19.560 align:middle
objet par défaut, je peux
envoyer le message "With" avec

00:03:19.760 --> 00:03:23.150 align:middle
cet objet par défaut dans
"Set", et ce code-là va être

00:03:23.350 --> 00:03:26.550 align:middle
exécuté pour créer un
nouveau "Set", le mettre dans la

00:03:26.750 --> 00:03:30.630 align:middle
variable "Instance", ajouter
à Instance le nouvel objet,

00:03:31.030 --> 00:03:33.130 align:middle
le paramètre et retourner instance.

00:03:34.330 --> 00:03:37.090 align:middle
Mais l'ensemble de ces
expressions, je peux le réécrire

00:03:37.290 --> 00:03:39.410 align:middle
en utilisant Yourself de
façon un tout petit peu plus

00:03:39.610 --> 00:03:42.650 align:middle
concise et plus
idiomatique. Donc typiquement, on

00:03:42.850 --> 00:03:45.790 align:middle
retrouvera ce genre de
code-là dans l'ensemble de l'image

00:03:46.000 --> 00:03:49.570 align:middle
Pharo donc il est
important de bien maîtriser le

00:03:49.770 --> 00:03:52.180 align:middle
point-virgule, donc
la cascade et Yourself.

00:03:53.160 --> 00:03:56.210 align:middle
Alors ce que vous devez
avoir retenu à la fin de cette

00:03:56.410 --> 00:03:59.340 align:middle
séquence, c'est que
certaines méthodes, même si elles

00:03:59.540 --> 00:04:03.180 align:middle
sont extrêmement simples, peuvent
être très puissantes et très utilisées.

00:04:05.330 --> 00:04:08.890 align:middle
Et la cascade, donc le
point-virgule et la méthode

00:04:09.090 --> 00:04:12.740 align:middle
Yourself sont très souvent
utilisés ensemble, pour s'assurer

00:04:12.940 --> 00:04:16.950 align:middle
qu'une expression complète
retourne bien une valeur, la

00:04:17.150 --> 00:04:17.910 align:middle
valeur qu'on a souhaitée.

