WEBVTT

00:00:01.370 --> 00:00:03.710 align:middle
このビデオでは
Nautilus(ノーチラス)の

00:00:03.710 --> 00:00:06.930 align:middle
便利な小技を2つ3つお教えします。
では、Nautilus を開いてみましょう。

00:00:09.090 --> 00:00:12.340 align:middle
まず1つ目です。
三角形のついたパッケージと

00:00:12.340 --> 00:00:15.950 align:middle
三角形のついていないパッケージがありますね。

00:00:16.910 --> 00:00:19.330 align:middle
三角形をクリックすれば

00:00:19.330 --> 00:00:21.560 align:middle
その中にいくつか名前が入っています。
どういうことでしょうか？

00:00:22.050 --> 00:00:26.900 align:middle
AST-Core をクリックすれば

00:00:26.900 --> 00:00:28.810 align:middle
そのパッケージの中の全てのクラスと

9 align:middle
00:00:28,810 --> 00:00:31,910
拡張を見ることができます。
これについては説明しましたね。

00:00:31.910 --> 00:00:34.370 align:middle
そして名前が見えます。
実際にはここにあるのは

00:00:34.370 --> 00:00:36.310 align:middle
タグ(tag)と呼ばれるもので
パッケージではありません。

00:00:36.310 --> 00:00:39.180 align:middle
サブパッケージでもありません。
クラスの単に論理的なグループです。

00:00:39.210 --> 00:00:42.670 align:middle
ある理由があって開発者はこのように決めたわけですが

00:00:42.670 --> 00:00:45.000 align:middle
パッケージをブラウズするためには

00:00:45.000 --> 00:00:48.450 align:middle
まず第1に全てのクラスがあって

00:00:48.450 --> 00:00:52.560 align:middle
第2にそれらのクラスを揃えるための
組織立てがあるわけです。

00:00:52.560 --> 00:00:54.650 align:middle
例えばコードを整形する
フォーマッタ(Formatter)があります。

00:00:55.100 --> 00:00:58.910 align:middle
Pharo には2種類のフォーマッタがあります。
Nodes には抽象構文木(abstract syntax tree)の

00:00:58.910 --> 00:01:02.560 align:middle
全てのノードがあります。
ここに Parser があります。

00:01:02.560 --> 00:01:04.310 align:middle
そして Tokens や Visitors があります。

00:01:04.340 --> 00:01:06.800 align:middle
これらを素早く見ることができます。

00:01:06.800 --> 00:01:09.580 align:middle
何かしようと思った時に
正しいカテゴリーに直接行くことができます。

00:01:14.590 --> 00:01:16.130 align:middle
さあここで
お見せしたいのですが

00:01:16.130 --> 00:01:18.890 align:middle
Nautilus からの情報をフィルタしたり

00:01:18.890 --> 00:01:21.240 align:middle
グループを作って

00:01:21.240 --> 00:01:22.560 align:middle
開発を管理する方法です。

00:01:23.040 --> 00:01:24.670 align:middle
Nautilus を開きましょう。

00:01:24.670 --> 00:01:29.240 align:middle
例えば Collections と入力すれば

00:01:29.550 --> 00:01:31.820 align:middle
Collections という語が
パッケージ名またはタグに含まれる

00:01:31.820 --> 00:01:36.680 align:middle
全てのパッケージを
手元に持つことができます。

00:01:36.680 --> 00:01:37.650 align:middle
ここを見れば、これがあります。

00:01:38.340 --> 00:01:39.450 align:middle
これはとても助けになります。

00:01:39.450 --> 00:01:43.800 align:middle
組み合わせることもできます。

00:01:43.800 --> 00:01:46.950 align:middle
Morph と Collections を含む
全てのパッケージを手元に持ってきます。

00:01:50.850 --> 00:01:53.210 align:middle
別の方法もあります。

00:01:53.210 --> 00:01:58.130 align:middle
例えば Fuel について作業するとしましょう。
Fuel は Pharo のシリアライザです。

00:01:58.520 --> 00:02:03.250 align:middle
Fuelの全パッケージを手元に持ってきて
別のグループに入れます。

00:02:04.750 --> 00:02:07.440 align:middle
ここでは Work グループに入れます。
つまり

00:02:07.440 --> 00:02:10.050 align:middle
次に Nautilus を開いた時には

00:02:10.050 --> 00:02:11.430 align:middle
Nautilus 上に Work というグループが
あるでしょう。

00:02:12.000 --> 00:02:14.680 align:middle
この Work グループには
元の機能そのままの Fuel の

00:02:14.680 --> 00:02:16.920 align:middle
全パッケージが入っています。

00:02:16.920 --> 00:02:19.860 align:middle
毎回探す必要がないので
とても実践的です。

00:02:19.860 --> 00:02:22.070 align:middle
探さなくてもここにあるのです。

00:02:22.070 --> 00:02:24.290 align:middle
同じように
Work をクリックして

00:02:24.290 --> 00:02:26.210 align:middle
新しいグループを作ります。

00:02:26.210 --> 00:02:31.110 align:middle
ここではMyNewGroup という名前にしましょう。

00:02:31.390 --> 00:02:35.610 align:middle
Core を追加するには
「Add in group」そして「MyNewGroup」とすれば

00:02:36.200 --> 00:02:37.840 align:middle
そのパッケージを手にすることができます。

