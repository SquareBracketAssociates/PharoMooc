1
00:00:01,510 --> 00:00:03,330
このビデオでは

2
00:00:03,330 --> 00:00:06,530
Nautilus(ノーチラス）の
簡単な要素をお見せします。

3
00:00:06,530 --> 00:00:08,770
クラスブラウザに関する
より複雑な要素は

4
00:00:08,770 --> 00:00:12,060
続くビデオでお見せします。

5
00:00:12,140 --> 00:00:14,920
Nautilusは
コードをブラウズすることを可能にします。

6
00:00:16,860 --> 00:00:18,640
開きます。
さあ、何があるでしょう？

7
00:00:20,110 --> 00:00:21,700
Pharoの全てのパッケージがあります。

8
00:00:23,150 --> 00:00:27,800
例えば AST-CORE があります。
このパッケージは

9
00:00:27,800 --> 00:00:31,530
コンパイラがコードをパーズしたり
コードを表現したりするために使われます。

10
00:00:32,660 --> 00:00:36,360
私の手には AST-Core パッケージがあり
AST-Core パッケージに格納されている

11
00:00:36,550 --> 00:00:39,800
いくつかのクラスがあります。
そして、例えば

12
00:00:39,800 --> 00:00:44,250
継承があります。
RBAssignmentToken は

13
00:00:45,510 --> 00:00:46,680
RBTokenを継承しています。

14
00:00:49,630 --> 00:00:54,390
さて、例えば
NumberParserをクリックすれば

15
00:00:54,390 --> 00:00:57,740
NumberParserクラスが
あなたの手にあります。

16
00:00:57,740 --> 00:01:00,460
ここでそのクラスのコメントを見ることができます。

17
00:01:02,140 --> 00:01:03,990
そしてプロトコルを見ることができます。

18
00:01:03,990 --> 00:01:07,370
プロトコルとは
メソッドの概念的なグループのことです。

19
00:01:07,870 --> 00:01:10,160
「all」をクリックすれば
このクラスの全てのメソッドを見れます。

20
00:01:10,160 --> 00:01:12,400
あるいはどれかプロトコルを選択すれば

21
00:01:12,980 --> 00:01:15,070
より正確な情報が得られます。

22
00:01:15,070 --> 00:01:17,660
例えば initalize-release があります。

23
00:01:17,660 --> 00:01:20,610
パーザを初期化(initialize)するという
意味です。

24
00:01:20,610 --> 00:01:24,940
数値をパーズするために必要な
全てのメソッドが

25
00:01:24,940 --> 00:01:25,680
ここにあります。

26
00:01:25,850 --> 00:01:27,700
これは公開(public)メソッドで

27
00:01:27,700 --> 00:01:30,220
一方これらはプライベート(private)
メソッドで

28
00:01:30,290 --> 00:01:32,660
外部から通常の方法で呼ばれたくない
ものです。

29
00:01:32,980 --> 00:01:37,800
ここにくれば
メソッドのコードが見れます。
